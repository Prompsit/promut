"""empty message

Revision ID: e34abbf82a4d
Revises: a46b49b730d4
Create Date: 2025-01-13 10:58:18.411526

"""

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision = "e34abbf82a4d"
down_revision = "a46b49b730d4"
branch_labels = None
depends_on = None

ROLE_MAPPING = {"Admin": 1, "Beginner": 2, "Expert": 3, "Researcher": 4}


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    # with op.batch_alter_table('user', schema=None) as batch_op:
    #     batch_op.add_column(sa.Column('role_id', sa.Integer(), nullable=True))
    #     batch_op.create_foreign_key("role_id", 'role', ['role_id'], ['id'])
    #     batch_op.drop_column('expert')
    #     batch_op.drop_column('admin')
    # Step 2: Add the new role_id column
    with op.batch_alter_table("user", schema=None) as batch_op:
        batch_op.add_column(sa.Column("role_id", sa.Integer(), nullable=True))
        batch_op.create_foreign_key("role_id", "role", ["role_id"], ["id"])

    # Step 3: Update role_id for users who were experts or admins
    conn = op.get_bind()

    conn.execute(
        sa.text("UPDATE user SET role_id = :role_id WHERE expert = TRUE"),
        {"role_id": ROLE_MAPPING["Expert"]},
    )

    conn.execute(
        sa.text("UPDATE user SET role_id = :role_id WHERE admin = TRUE"),
        {"role_id": ROLE_MAPPING["Admin"]},
    )

    conn.execute(
        sa.text(
            "UPDATE user SET role_id = :role_id WHERE admin = FALSE AND expert = FALSE"
        ),
        {"role_id": ROLE_MAPPING["Beginner"]},
    )

    # Step 4: Drop the old expert and admin columns
    with op.batch_alter_table("user", schema=None) as batch_op:
        batch_op.drop_column("expert")
        batch_op.drop_column("admin")

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("user", schema=None) as batch_op:
        batch_op.add_column(sa.Column("admin", sa.BOOLEAN(), nullable=True))
        batch_op.add_column(sa.Column("expert", sa.BOOLEAN(), nullable=True))
        batch_op.drop_constraint(None, type_="foreignkey")
        batch_op.drop_column("role_id")

    # ### end Alembic commands ###